<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="10.6.3-SNAPSHOT_aef2fbb50778cc1bd9a60003062d4ef8bfca9bb3">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.tibco.ep.community.components.sblvprometheus.GetAllMetrics"/>
        </type-metadata>
        <memory-model-settings/>
        <import from="lvinterfaces.MetricsSchemas"/>
        <named-schemas>
            <schema name="HTTPClientAdvancedSchema">
                <field name="connectTimeout" type="int"/>
                <field name="readTimeout" type="int"/>
                <field name="reconnectTimeout" type="int"/>
                <field name="pollFrequency" type="int"/>
                <field name="ignoreCertificateErrors" type="bool"/>
            </schema>
            <schema name="HTTPClientAuthSchema">
                <field name="authType" type="string"/>
                <field name="user" type="string"/>
                <field name="pass" type="string"/>
            </schema>
            <schema name="HTTPClientCookieSchema">
                <field name="name" type="string"/>
                <field name="value" type="string"/>
            </schema>
            <schema name="HTTPClientDataSchema">
                <field name="text" type="string"/>
                <field name="binary" type="blob"/>
                <field name="filePath" type="string"/>
                <field name="mediaType" type="string"/>
                <field name="name" type="string"/>
                <field name="urlEncode" type="bool"/>
                <field name="urlEncodeType" type="string"/>
            </schema>
            <schema name="HTTPClientHeadersSchema">
                <field name="name" type="string"/>
                <field name="values" type="list">
                    <element-type type="string"/>
                </field>
            </schema>
            <schema name="HTTPClientProxySchema">
                <field name="useProxy" type="bool"/>
                <field name="host" type="string"/>
                <field name="port" type="int"/>
                <field name="user" type="string"/>
                <field name="pass" type="string"/>
            </schema>
            <schema name="HTTPClientQueryParametersSchema">
                <field name="name" type="string"/>
                <field name="value" type="string"/>
                <field name="urlEncode" type="bool"/>
                <field name="urlEncodeType" type="string"/>
            </schema>
            <schema name="HTTPClientSettingsOutputSchema">
                <field name="outputTuplePerLine" type="bool"/>
                <field name="outputBlankLines" type="bool"/>
                <field name="outputNullTupleOnCompletion" type="bool"/>
                <field name="outputConnectingStatus" type="bool"/>
                <field name="useDefaultCharset" type="bool"/>
                <field name="charset" type="string"/>
                <field name="urlDecode" type="bool"/>
                <field name="urlDecodeType" type="string"/>
            </schema>
            <schema name="HTTPClientSettingsSchema">
                <field name="requestMethod" type="string"/>
                <field name="requestType" type="string"/>
                <field name="downloadPath" type="string"/>
                <field name="asynchronous" type="bool"/>
                <field name="proxy" type="tuple" value="HTTPClientProxySchema"/>
                <field name="advanced" type="tuple" value="HTTPClientAdvancedSchema"/>
                <field name="auth" type="tuple" value="HTTPClientAuthSchema"/>
                <field name="output" type="tuple" value="HTTPClientSettingsOutputSchema"/>
            </schema>
            <schema name="HTTPClientControlSchema">
                <field name="command" type="string"/>
                <field name="url" type="string"/>
                <field name="data" type="list">
                    <element-type type="tuple" value="HTTPClientDataSchema"/>
                </field>
                <field name="headers" type="list">
                    <element-type type="tuple" value="HTTPClientHeadersSchema"/>
                </field>
                <field name="queryParameters" type="list">
                    <element-type type="tuple" value="HTTPClientQueryParametersSchema"/>
                </field>
                <field name="cookies" type="list">
                    <element-type type="tuple" value="HTTPClientCookieSchema"/>
                </field>
                <field name="settings" type="tuple" value="HTTPClientSettingsSchema"/>
            </schema>
        </named-schemas>
        <parameter-definitions>
            <parameter default="systemproperty(&quot;liveview.prometheus.server.url&quot;, &quot;http://localhost:9090&quot;)" name="PROMETHEUS_URL"/>
        </parameter-definitions>
        <dynamic-variables/>
        <stream name="DataControl" schema="HTTPClientControlSchema" scope="public"/>
        <stream name="MetricIn" schema="MetricsTableSchema" scope="public"/>
        <box name="Metronome" type="metronome">
            <output port="1" stream="out:Metronome_1"/>
            <param name="interval" value="5"/>
            <param name="timestamp-field" value="time"/>
        </box>
        <box name="MakeDataReq" type="map">
            <input port="1" stream="out:Metronome_1"/>
            <output port="1" stream="out:MakeDataReq_1"/>
            <target-list>
                <item name="input" selection="all"/>
            </target-list>
        </box>
        <box name="Union2" type="union">
            <input port="1" stream="out:MakeDataReq_1"/>
            <input port="2" stream="DataControl"/>
            <output port="1" stream="out:Union2_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="MetricData" type="inputadapter">
            <input port="1" stream="out:Union2_1"/>
            <output port="1" stream="out:MetricData_1"/>
            <output port="2" stream="out:MetricData_2"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.httpclient.HTTPClient"/>
            <param name="Charset" value=""/>
            <param name="LogLevel" value="INFO"/>
            <param name="ProxyHost" value=""/>
            <param name="ProxyPass" value=""/>
            <param name="ProxyPort" value="8080"/>
            <param name="ProxyUser" value=""/>
            <param name="UseDefaultCharset" value="true"/>
            <param name="UseProxy" value="false"/>
            <param name="asynchronous" value="true"/>
            <param name="authPassword" value=""/>
            <param name="authType" value="None"/>
            <param name="authUsername" value=""/>
            <param name="connectTimeout" value="30000"/>
            <param name="downloadPath" value=""/>
            <param name="excutorThreads" value="3"/>
            <param name="ignoreCertificateErrors" value="false"/>
            <param name="outputBlankLines" value="true"/>
            <param name="outputConnectingStatus" value="true"/>
            <param name="outputCookies" value="true"/>
            <param name="outputHeaders" value="true"/>
            <param name="outputInputTuple" value="true"/>
            <param name="outputNullTupleOnCompletion" value="true"/>
            <param name="outputTuplePerLine" value="false"/>
            <param name="pollFrequency" value="0"/>
            <param name="readTimeout" value="30000"/>
            <param name="reconnectTimeout" value="3000"/>
            <param name="requestMethod" value="GET"/>
            <param name="requestType" value="Basic"/>
            <param name="url" value="${PROMETHEUS_URL}/metrics"/>
            <param name="urlDecodeData" value="false"/>
            <param name="urlDecodeDataType" value="QUERY_PARAM_SPACE_ENCODED"/>
        </box>
        <box name="MetricDataStatus" type="outputadapter">
            <input port="1" stream="out:MetricData_2"/>
            <output port="1" stream="out:MetricDataStatus_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.logger.Log"/>
            <param name="CaptureStrategy" value="FLATTEN"/>
            <param name="asyncEnabled" value="true"/>
            <param name="compressFrequentMessages" value="false"/>
            <param name="compressMaxWindowSize" value="5.0"/>
            <param name="customFormat" value=""/>
            <param name="customFormatExpression" value=""/>
            <param name="customFormatType" value="Basic"/>
            <param name="emitLoggedTuples" value="true"/>
            <param name="encodeSubType" value="Map"/>
            <param name="hexEncodeBlobs" value="false"/>
            <param name="includeNullFields" value="false"/>
            <param name="logLevel" value="Debug"/>
            <param name="logLevelOverrideFieldName" value=""/>
            <param name="loggerFormatType" value="CSV"/>
            <param name="messageIdentifier" value=""/>
            <param name="messageIdentifierExpression" value=""/>
            <param name="messageIdentifierType" value="Use EventFlow Name"/>
            <param name="messagePrefix" value=""/>
            <param name="moduleQualifiedEventFlowName" value="false"/>
            <param name="quoteNullStrings" value="true"/>
            <param name="timestampAsLong" value="false"/>
            <param name="timestampFormat" value="yyyy-MM-dd HH:mm:ss.SSSZ"/>
            <param name="verbose" value="false"/>
        </box>
        <box name="SplitNL" type="map">
            <input port="1" stream="out:MetricData_1"/>
            <output port="1" stream="out:SplitNL_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="data">split(data, '\n')</include>
                </expressions>
            </target-list>
        </box>
        <box name="Iterate" type="iterate">
            <input port="1" stream="out:SplitNL_1"/>
            <output port="1" stream="out:Iterate_1"/>
            <param name="iterate-expr" value="data"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="element">each.element</include>
                </expressions>
            </target-list>
        </box>
        <box name="RmComment" type="filter">
            <input port="1" stream="out:Iterate_1"/>
            <output port="1" stream="out:RmComment_1"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="!startswith(element, &quot;#&quot;)"/>
        </box>
        <box name="GetValue" type="map">
            <input port="1" stream="out:RmComment_1"/>
            <output port="1" stream="out:GetValue_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="Name">if (contains(element, "{"))  then  substr(element, 0, indexof(element, "{")) else  substr(element, 0, indexof(element, " "))</include>
                    <include field="OtherLabels">if (contains(element, "{")) then  substr(element, indexof(element, "{")+1, (length(element) -  indexof(element, "{")) - (length(element) -  indexof(element, "}")) - 1  ) else null</include>
                    <include field="Value">double(substr(element, indexof(element, " ")))</include>
                </expressions>
            </target-list>
        </box>
        <box name="Union" type="union">
            <input port="1" stream="out:GetValue_1"/>
            <input port="2" stream="MetricIn"/>
            <output port="1" stream="out:Union_1"/>
            <param name="strict" value="false"/>
        </box>
        <box name="AddControlFields1" type="map">
            <property name="description" value="Adds default values for all LiveView control fields.&#13;&#10;The app can use these fields to support udpate/delete rules,&#13;&#10;or table persistence."/>
            <input port="1" stream="out:Union_1"/>
            <output port="1" stream="PublishToMetricsOut"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="*">MetricsInputControlFields().*</include>
                    <replace field="EventTime">now()</replace>
                </expressions>
            </target-list>
        </box>
        <output-stream name="PublishToMetricsOut" schema="MetricsDataInSchema"/>
    </add>
</modify>
